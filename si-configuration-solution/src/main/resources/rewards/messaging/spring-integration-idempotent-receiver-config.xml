<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/integration
            http://www.springframework.org/schema/integration/spring-integration.xsd">

	<int:channel id="dinings">
		<int:queue />
	</int:channel>

	<int:chain input-channel="dinings" output-channel="confirmations">
		<int:filter
			expression="payload.amount != null and payload.creditCardNumber != null and payload.merchantNumber != null and payload.date != null"
			throw-exception-on-rejection="true" />
		<int:service-activator ref="alreadyRewardedConfirmer" />
		<int:service-activator ref="rewardNetwork"
			method="rewardAccountFor" />
	</int:chain>

	<bean id="alreadyRewardedConfirmer" class="rewards.messaging.AlreadyRewardedConfirmer">
		<constructor-arg ref="rewardRepository" />
		<constructor-arg ref="confirmationProcessor" />
	</bean>

	<int:gateway service-interface="rewards.messaging.ConfirmationProcessor"
		id="confirmationProcessor" default-request-channel="confirmations" />

	<int:channel id="confirmations">
		<int:queue capacity="10" />
	</int:channel>

	<!-- Redefine the errorChannel to ignore errors since the logging-channel-adapter 
		handles them. Using the default errorChannel generates an unwanted stack-trace. -->
	<int:publish-subscribe-channel id="errorChannel"
		ignore-failures="true" />

	<int:logging-channel-adapter channel="errorChannel"
		expression="'filter rejected message with ' + payload.failedMessage.payload"
		level="WARN" />
</beans>
